AWSTemplateFormatVersion: '2010-09-09'
Description: Create an EC2 instance using existing VPC, subnet, and security group.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Base Configuration"
        Parameters:
          - S3Bucket
          - NbSubsets
          - ExperimentName
          - Plates
          - Channels
          - AWSRegion

      - Label:
          default: "Advanced"
        Parameters:
          - downsampling
          - FFC
          - FFCNbImages
          - MinCellSize
          - MaxCellSize
          - CsvCoordinates
          - QC
          - Zstack
          - PlateIdentifier
          - Pattern
          - FileExtensions
          - ImageSize
          - ROI
          - MaxFileSize
          - InstanceType
          - AmazonAMI
          - NbWorkers
          - SegmentingFunction
          - NeuriteTracing
          - SecurityGroupID
          - SubnetID

Parameters:
  S3Bucket:
    Description: "Name of the S3 bucket to sync data from"
    Type: String
    Default: 'nyscf-scalefex'
  Channels:
    Description: "Channels in order to be processed. NOTE: the nuclear channel should be first"
    Type: String
    Default: "['ch4','ch1','ch5','ch3','ch2']"
  ExperimentName:
    Description: "Experiment name -> Must be in the image's key"
    Type: String
    Default: 'HTS0019'
  AmazonAMI:
    Description: "Up to date Amazon Linux Machine ID"
    Type: String
    Default: 'ami-04e5276ebb8451442'
  Plates:
    Description: "List of plates to be processed"
    Type: String
    Default: "['101', '102']"
  PlateIdentifier:
    Description: "Identifier for finding the plate number; should directly precede and follow the plate identifier"
    Type: String
    Default: "['_CV384W_','_']"
  Pattern:
    Description: "Pattern of the image file: specify all the characters that make up the filepath indicating the location and"
    Type: String
    Default: 'Images/<Well(6)><Site(3)><Plane(3)>-<Channel(3)>.<ext>'
  Extensions:
    Description: "List of extensions for images to be processed"
    Type: String
    Default: "['tiff']"
  ImageSize:
    Description: "Size of images to be processed in pixels (height, width)"
    Type: String
    Default: "[2160, 2160]"
  ROI:
    Description: "Half the size of the cropped area around the cell (e.g., 150 for 300x300 ROI) 90"
    Type: Number
    Default: '150'
  RNAChannel:
    Description: "Channel with RNA stain (if any)"
    Type: String
    Default: 'ch5'
  MitoChannel:
    Description: "Channel with mitochondrial stain (if any)"
    Type: String
    Default: 'ch2'
  Zstack:
    Description: "Set to true if you have multi-plane images and you want to process max projections of the planes"
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
  Downsampling:
    Description: "Downsampling ratio"
    Type: Number
    Default: '1'
  QC:
    Description: "If true, compute a Quality Control step"
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'true'
  FFC:
    Description: "If true, compute a flat field correction image to correct for non-uniform background illumination"
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'true'
  FFCNbImages:
    Description: "Number of images to be used to produce the background trend image for the Flat Field Correction"
    Type: Number
    Default: '500'
  MinCellSize:
    Description: "Minimum cell size area"
    Type: Number
    Default: '200'
  MaxCellSize:
    Description: "Maximum cell size area"
    Type: Number
    Default: '100000'
  CsvCoordinates:
    Description: "CSV file for coordinates | coord.csv"
    Type: String
    Default: ''
  SegmentingFunction:
    Description: "Segmenting function to use"
    Type: String
    Default: 'Nuclei_segmentation.nuclei_location_extraction'
  NbSubsets:
    Description: "How many machines per plate"
    Type: Number
    Default: '1'
  NbWorkers:
    Description: "Number of workers to use in parallel. Fixed for this InstanceType"
    Type: Number
    Default: '40'
  InstanceType:
    Description: "Instance type to use"
    Type: String
    Default: 'c5.12xlarge'
  MaxFileSize:
    Description: "Max file size in MB before a new file is created"
    Type: Number
    Default: '32'
  NeuriteTracing:
    Description: "Channel with which to compute tracing (if any)"
    Type: String
    Default: ''
  AWSRegion:
    Description: "AWSRegion to be used"
    Type: String
    Default: us-east-1
  SubnetID:
    Description: "SubnetID to be used, leave empty for default"
    Type: String
    Default: ''
  SecurityGroupID:
    Description: "SecurityGroupID to be used, leave empty for default"
    Type: String
    Default: ''

Resources:
  # EC2 Instance
  ScaleFExEC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmazonAMI
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          DeviceIndex: 0
          GroupSet:
            - !ImportValue ScaleFExSecurityGroupId
          SubnetId: !ImportValue ScaleFExSubnetId
      IamInstanceProfile: 'ScaleFExInstanceProfile'
      Tags:
        - Key: Name
          Value: !Sub "Init-${ExperimentName}"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          cd /home/ec2-user
          sudo yum update -y
          sudo yum install python3 python3-pip -y
          sudo yum install -y awscli jq
          sudo yum install git -y
          SECRET_NAME="Gab_Github"
          REGION="${AWSRegion}"
          SECRET=$(aws secretsmanager get-secret-value --secret-id $SECRET_NAME --region $REGION --query SecretString --output text)
          USERNAME=$(echo "$SECRET" | jq -r 'keys[]')
          TOKEN=$(echo "$SECRET" | jq -r '.[keys[]]')
          echo -e "machine github.com\nlogin $USERNAME\npassword $TOKEN" > ~/.netrc 
          chmod 600 ~/.netrc
          MAIN_REPO_URL="https://github.com/NYSCF/NYSCF_HCI_image_processing.git"
          git clone $MAIN_REPO_URL
          cd NYSCF_HCI_image_processing
          git submodule update --init --recursive
          mv ../NYSCF_HCI_image_processing project
          python3 -m pip install --user virtualenv
          python3 -m virtualenv venv
          source venv/bin/activate
          sudo yum install libglvnd-glx -y
          cd project
          pip install -r AWS_requirements.txt
          sudo sed -i "s|^n_of_workers:.*|n_of_workers: ${NbWorkers}|" parameters.yaml
          sudo sed -i "s|^experiment_name:.*|experiment_name: ${ExperimentName}|" parameters.yaml
          sudo sed -i "s|^plates:.*|plates: ${Plates}|" parameters.yaml
          sudo sed -i "s|^plate_identifiers:.*|plate_identifiers: ${PlateIdentifier}|" parameters.yaml
          sudo sed -i "s|^pattern:.*|pattern: ${Pattern}|" parameters.yaml
          sudo sed -i "s|^exts:.*|exts: ${Extensions}|" parameters.yaml
          sudo sed -i "s|^image_size:.*|image_size: ${ImageSize}|" parameters.yaml
          sudo sed -i "s|^channel:.*|channel: ${Channels}|" parameters.yaml
          sudo sed -i "s|^ROI:.*|ROI: ${ROI}|" parameters.yaml
          sudo sed -i "s|^RNA_channel:.*|RNA_channel: ${RNAChannel}|" parameters.yaml
          sudo sed -i "s|^Mito_channel:.*|Mito_channel: ${MitoChannel}|" parameters.yaml
          sudo sed -i "s|^zstack:.*|zstack: ${Zstack}|" parameters.yaml
          sudo sed -i "s|^downsampling:.*|downsampling: ${Downsampling}|" parameters.yaml
          sudo sed -i "s|^QC:.*|QC: ${QC}|" parameters.yaml
          sudo sed -i "s|^FFC:.*|FFC: ${FFC}|" parameters.yaml
          sudo sed -i "s|^FFC_n_images:.*|FFC_n_images: ${FFCNbImages}|" parameters.yaml
          sudo sed -i "s|^csv_coordinates:.*|csv_coordinates: ${CsvCoordinates}|" parameters.yaml
          sudo sed -i "s|^segmenting_function:.*|segmenting_function: ${SegmentingFunction}|" parameters.yaml
          sudo sed -i "s|^min_cell_size:.*|min_cell_size: ${MinCellSize}|" parameters.yaml
          sudo sed -i "s|^max_cell_size:.*|max_cell_size: ${MaxCellSize}|" parameters.yaml
          sudo sed -i "s|^s3_bucket:.*|s3_bucket: ${S3Bucket}|" parameters.yaml
          sudo sed -i "s|^nb_subsets:.*|nb_subsets: ${NbSubsets}|" parameters.yaml
          sudo sed -i "s|^amazon_image_id:.*|amazon_image_id: ${AmazonAMI}|" parameters.yaml
          sudo sed -i "s|^instance_type:.*|instance_type: ${InstanceType}|" parameters.yaml
          sudo sed -i "s|^max_file_size:.*|max_file_size: ${MaxFileSize}|" parameters.yaml
          sudo sed -i "s|^neurite_tracing:.*|neurite_tracing: ${NeuriteTracing}|" parameters.yaml
          sudo sed -i "s|^region:.*|region: ${AWSRegion}|" parameters.yaml
          sudo sed -i "s|^security_group_id:.*|security_group_id: ${SecurityGroupID}|" parameters.yaml
          sudo sed -i "s|^subnet_id:.*|subnet_id: ${SubnetID}|" parameters.yaml
          python3 AWS_scalefex_init.py

Outputs:
  InstanceId1:
    Description: EC2 Instance ID 1
    Value: !Ref ScaleFExEC2Instance1