AWSTemplateFormatVersion: '2010-09-09'
Description: Create an EC2 instance using existing VPC, subnet, and security group.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Base Configuration"
        Parameters:
          - S3Bucket
          - NbSubsets
          - ExperimentName
          - ExperimentFolder
          - Plates
          - Channel
          - AWSRegion

      - Label:
          default: "Advanced"
        Parameters:
          - Downsampling
          - FFC
          - FFCNbImages
          - MinCellSize
          - MaxCellSize
          - CsvCoordinates
          - QC
          - Zstack
          - PlateIdentifier
          - FnamePattern
          - FileExtensions
          - ImageSize
          - ROI
          - InstanceType
          - AmazonAMI
          - SegmentingFunction
          - SecurityGroupID
          - SubnetID
          - SubsetIndex

Parameters:
  S3Bucket:
    Description: Name of the S3 bucket to sync data from
    Type: String
    Default: 'nyscf-scalefex'
  Channel:
    Description: List of channels to be computed in order
    Type: String
    Default: "['ch4','ch1','ch5','ch3','ch2']"
  ExperimentName:
    Description: "Experiment name -> Must be in the image's key"
    Type: String
    Default: 'HTF0003'
  ExperimentFolder:
    Description: "S3 folder containing images | ExperimentName followed by /"
    Type: String
    Default: 'HTF0003/'
  AmazonAMI:
    Description: "Up to date Amazon Linux Machine ID"
    Type: String
    Default: 'ami-0ae8f15ae66fe8cda'
  Plates:
    Description: "List of plates to compute, formatted as a Python list"
    Type: String
    Default: "['101', '203']"
  PlateIdentifier:
    Description: "Identifier for finding the plate number"
    Type: String
    Default: "['CV384W_','_']"
  FnamePattern:
    Description: "Phenix pattern for filename"
    Type: String
    Default: '<Well>f<Site>p<Plane(2)>-<Channel(3)>.<ext>'
  FileExtensions:
    Description: "List of file extensions to consider, formatted as a Python list"
    Type: String
    Default: "['tiff']"
  ImageSize:
    Description: "Dimensions of the images as width,height, formatted as a Python list"
    Type: String
    Default: "[2160, 2160]"
  ROI:
    Description: "Region of Interest size"
    Type: Number
    Default: 150
  RNAChannel:
    Description: "Channel for RNA, set only if you want to compute ScaleFex"
    Type: String
    Default: 'ch5'
  MitoChannel:
    Description: "Channel for mitochondria, set only if you want to compute ScaleFex"
    Type: String
    Default: 'ch2'
  Zstack:
    Description: "Enable or disable z-stack computation"
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
  Downsampling:
    Description: "Level of image downsampling"
    Type: Number
    Default: 1
  QC:
    Description: "Enable or disable Quality Control"
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'true'
  FFC:
    Description: "Enable or disable Flat Field Correction"
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'true'
  FFCNbImages:
    Description: "Number of images per channel to be used for Flat Field Correction"
    Type: Number
    Default: 500
  MinCellSize:
    Description: "Minimum cell size area"
    Type: Number
    Default: 200
  MaxCellSize:
    Description: "Maximum cell size area"
    Type: Number
    Default: 100000
  CsvCoordinates:
    Description: "CSV file for coordinates | coord.csv"
    Type: String
    Default: ''
  SegmentingFunction:
    Description: "Segmenting function to use"
    Type: String
    Default: 'Nuclei_segmentation.nuclei_location_extraction'
  NbSubsets:
    Description: "How many machines per plate"
    Type: Number
    Default: 5
  SubsetIndex:
    Description: "Do you want to compute a specific subset?"
    Type: String
    Default: 'all'
  InstanceType:
    Description: "Instance type to use"
    Type: String
    Default: 'c5.12xlarge'
  AWSRegion:
    Description: "AWSRegion"
    Type: String
    Default: us-east-1
  ScaleFExSubnetA:
    Description: "ScaleFExSubnetAId"
    Type: String
    Default: ''
  ScaleFExSubnetB:
    Description: "ScaleFExSubnetBId"
    Type: String
    Default: ''
  ScaleFExSubnetC:
    Description: "ScaleFExSubnetCId"
    Type: String
    Default: ''
  SecurityGroupID:
    Description: "SecurityGroupID"
    Type: String
    Default: ''

Resources:
  # EC2 Instance
  ScaleFExEC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmazonAMI
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          DeviceIndex: 0
          GroupSet:
            - !ImportValue ScaleFExSecurityGroupId
          SubnetId: !ImportValue ScaleFExSubnetAId
      IamInstanceProfile: 'ScaleFExInstanceProfile'
      Tags:
        - Key: Name
          Value: !Sub "Init-${ExperimentName}"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          cd /home/ec2-user
          sudo yum update -y
          sudo yum install python3 python3-pip -y
          sudo yum install -y awscli jq
          sudo yum install git -y
          SECRET_NAME="Gab_Github"
          REGION="${AWSRegion}"
          SECRET=$(aws secretsmanager get-secret-value --secret-id $SECRET_NAME --region $REGION --query SecretString --output text)
          USERNAME=$(echo "$SECRET" | jq -r 'keys[]')
          TOKEN=$(echo "$SECRET" | jq -r '.[keys[]]')
          echo -e "machine github.com\nlogin $USERNAME\npassword $TOKEN" > ~/.netrc 
          chmod 600 ~/.netrc
          MAIN_REPO_URL="https://github.com/NYSCF/ScaleFEx.git"
          git clone $MAIN_REPO_URL
          cd ScaleFEx
          echo "OK" > a.txt
          git submodule update --init --recursive
          mv ../ScaleFEx project
          echo "OK" > B.txt
          python3 -m pip install --user virtualenv
          python3 -m virtualenv venv
          source venv/bin/activate
          sudo yum install libglvnd-glx -y
          cd project
          echo "C" > C.txt
          pip install -r AWS_requirements.txt
          sudo sed -i "s|^experiment_name:.*|experiment_name: ${ExperimentName}|" parameters.yaml
          sudo sed -i "s|^exp_folder:.*|exp_folder: ${ExperimentFolder}|" parameters.yaml
          sudo sed -i "s|^plates:.*|plates: ${Plates}|" parameters.yaml
          sudo sed -i "s|^plate_identifiers:.*|plate_identifiers: ${PlateIdentifier}|" parameters.yaml
          sudo sed -i "s|^fname_pattern:.*|fname_pattern: ${FnamePattern}|" parameters.yaml
          sudo sed -i "s|^file_extensions:.*|file_extensions: ${FileExtensions}|" parameters.yaml
          sudo sed -i "s|^image_size:.*|image_size: ${ImageSize}|" parameters.yaml
          sudo sed -i "s|^channel:.*|channel: ${Channel}|" parameters.yaml
          sudo sed -i "s|^ROI:.*|ROI: ${ROI}|" parameters.yaml
          sudo sed -i "s|^RNA_channel:.*|RNA_channel: ${RNAChannel}|" parameters.yaml
          sudo sed -i "s|^Mito_channel:.*|Mito_channel: ${MitoChannel}|" parameters.yaml
          sudo sed -i "s|^zstack:.*|zstack: ${Zstack}|" parameters.yaml
          sudo sed -i "s|^Downsampling:.*|downsampling: ${Downsampling}|" parameters.yaml
          sudo sed -i "s|^QC:.*|QC: ${QC}|" parameters.yaml
          sudo sed -i "s|^FFC:.*|FFC: ${FFC}|" parameters.yaml
          sudo sed -i "s|^FFC_n_images:.*|FFC_n_images: ${FFCNbImages}|" parameters.yaml
          sudo sed -i "s|^csv_coordinates:.*|csv_coordinates: ${CsvCoordinates}|" parameters.yaml
          sudo sed -i "s|^segmenting_function:.*|segmenting_function: ${SegmentingFunction}|" parameters.yaml
          sudo sed -i "s|^min_cell_size:.*|min_cell_size: ${MinCellSize}|" parameters.yaml
          sudo sed -i "s|^max_cell_size:.*|max_cell_size: ${MaxCellSize}|" parameters.yaml
          sudo sed -i "s|^s3_bucket:.*|s3_bucket: ${S3Bucket}|" parameters.yaml
          sudo sed -i "s|^nb_subsets:.*|nb_subsets: ${NbSubsets}|" parameters.yaml
          sudo sed -i "s|^subset_index:.*|subset_index: ${SubsetIndex}|" parameters.yaml
          sudo sed -i "s|^amazon_image_id:.*|amazon_image_id: ${AmazonAMI}|" parameters.yaml
          sudo sed -i "s|^instance_type:.*|instance_type: ${InstanceType}|" parameters.yaml
          sudo sed -i "s|^max_file_size:.*|max_file_size: 150" parameters.yaml
          sudo sed -i "s|^region:.*|region: ${AWSRegion}|" parameters.yaml
          sudo sed -i "s|^n_of_workers:.*|n_of_workers: 40|" parameters.yaml
          sudo sed -i "s|^security_group_id:.*|security_group_id: ${SecurityGroupID}|" parameters.yaml
          sudo sed -i "s|^ScaleFExSubnetA:.*|ScaleFExSubnetA: ${ScaleFExSubnetA}|" parameters.yaml
          sudo sed -i "s|^ScaleFExSubnetB:.*|ScaleFExSubnetB: ${ScaleFExSubnetB}|" parameters.yaml
          sudo sed -i "s|^ScaleFExSubnetC:.*|ScaleFExSubnetC: ${ScaleFExSubnetC}|" parameters.yaml
          echo "OK" > Ok.txt
          

Outputs:
  InstanceId1:
    Description: EC2 Instance ID 1
    Value: !Ref ScaleFExEC2Instance1